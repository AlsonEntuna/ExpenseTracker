<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="MainStyle.xaml" />
        <ResourceDictionary Source="../Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--  ListView / ListViewItem  -->
    <ControlTemplate x:Key="ListViewItemTemplate" TargetType="{x:Type ListViewItem}">
        <Grid Background="{TemplateBinding Background}">
            <Border
                x:Name="Selection"
                Padding="2"
                SnapsToDevicePixels="True"
                Visibility="Collapsed" />
            <!--  This is used when GridView is put inside the ListView  -->
            <GridViewRowPresenter
                Grid.RowSpan="2"
                Margin="5,1,5,2"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <!--  This is used for ListView that does not use GridView  -->
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Margin}"
                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                Content="{TemplateBinding ContentControl.Content}"
                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                <Setter TargetName="Selection" Property="Background" Value="{DynamicResource Brush.Button.Disable}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                <Setter TargetName="Selection" Property="Background" Value="{DynamicResource Brush.Button.Main}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Button.Alt}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Button.Main}" />
                <Setter TargetName="Selection" Property="Background" Value="{DynamicResource Brush.Button.Disable}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type ListViewItem}">
        <Style.Resources>
            <Style BasedOn="{StaticResource {x:Type CheckBox}}" TargetType="{x:Type CheckBox}">
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Main.Background}" />
            </Style>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{DynamicResource ListViewItemTemplate}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource Brush.Main.Text}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="2,0,0,0" />
    </Style>
    <Style TargetType="{x:Type ListView}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--  Setter Property="OverridesDefaultStyle" Value="True" /  -->
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Background" Value="{DynamicResource Brush.Border.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Brush.Main.Text}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border.Background.Alt}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="2">
                        <ScrollViewer Style="{DynamicResource CustomScrollViewer}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Brush.Button.Disable}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>